async function loadClips(){let e=new DataTable("#clipsTable",{language:{emptyTable:'<div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div> Loading clips list...'}});try{let n=await fetch("/clips/clips.json"),t=await n.json(),r=[];for(let e=0;e<t.length;e++){let n=t[e].creator_name||"no username";"livestreamfails.com mirror"==n&&(n=`<a href="${t[e].reddit_link}" target="_blank" rel="noopener noreferrer" class="no-decoration">livestreamfails.com mirror</a>`),r.push([escapeString(t[e].title||"no title"),escapeString(t[e].game_name||"no game"),t[e].duration,t[e].view_count.toLocaleString(),t[e].created_at,n,`<a href="/clip#${t[e]._id}" target="_blank" rel="noopener noreferrer" class="no-decoration">Link</a>`])}e.rows.add(r).draw()}catch(e){document.querySelector("#clipsTable > tbody > tr > td").innerHTML=`Could not load clips :(<br>${e}`,console.log(e)}}async function playClip(){let e=location.hash?.replace("#","")?.trim();if(console.log(e),e){document.getElementById("clipPlayer").src=`https://f003.backblazeb2.com/file/forsen-clips/${e}.mp4`;let n=await fetch("/clips/clips.json"),t=(await n.json()).find((n=>n._id===e));if(t){let e=t.creator_name||"no username";"livestreamfails.com mirror"==e&&(e=`<a href="${t.reddit_link}" target="_blank" rel="noopener noreferrer" class="no-decoration">livestreamfails.com mirror</a>`),document.getElementById("clipTitle").innerHTML=`${escapeString(t.title||"no title")} - ${escapeString(t.game_name||"no game")}`,document.getElementById("clipInfo").innerHTML=`${t.view_count.toLocaleString()} ${1==t.view_count?"view":"views"} - Clipped by ${e} on ${t.created_at}`}else document.getElementById("clipTitle").innerHTML="Clip info not found",document.getElementById("clipInfo").innerHTML="Clip info not found"}else document.getElementById("clipTitle").innerHTML="No Clip ID provided",document.getElementById("clipInfo").innerHTML='Go back to the <a href="/clips/"  rel="noopener noreferrer" class="no-decoration">Clips page</a> to search for clips'}function escapeString(e){return assertString(e),e.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\//g,"&#x2F;").replace(/\\/g,"&#x5C;").replace(/`/g,"&#96;")}function assertString(e){if(!("string"==typeof e||e instanceof String)){let n=_typeof(e);throw null===e?n="null":"object"===n&&(n=e.constructor.name),new TypeError("Expected a string but received a ".concat(n))}}